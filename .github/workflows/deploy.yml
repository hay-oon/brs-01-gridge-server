## GitHub Actions 워크플로우

name: Deploy to EC2 (Docker Hub)

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      # Java 빌드를 위한 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Java 빌드
      - name: Build application
        run: ./gradlew bootJar

      # Docker 이미지 빌드
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/gridge-server:${{ github.sha }} .

      # Docker Hub 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Docker Hub에 이미지 푸시
      - name: Push to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/gridge-server:${{ github.sha }}
          docker tag ${{ secrets.DOCKER_USERNAME }}/gridge-server:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/gridge-server:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/gridge-server:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 프로젝트 디렉토리로 이동
            cd /home/ec2-user/brs-01-gridge-server

            # 최신 코드 풀
            git pull origin main

            # Docker Hub에서 최신 이미지 풀
            docker pull ${{ secrets.DOCKER_USERNAME }}/gridge-server:latest

            # 기존 컨테이너 중지
            docker-compose down || true

            # Docker Compose로 서비스 시작 (MySQL은 로컬 이미지 사용)
            docker-compose up -d

            # 컨테이너 상태 확인
            echo "컨테이너 상태 확인..."
            docker ps -a

            # 앱 로그 확인
            echo "앱 컨테이너 로그 확인..."
            docker logs gridge-server --tail 50

            # 헬스체크 (앱 시작 시간을 고려하여 대기 시간 증가)
            echo "앱 시작 대기 중..."
            sleep 60

            # 컨테이너 상태 재확인
            echo "60초 후 컨테이너 상태 확인..."
            docker ps -a

            # 간단한 헬스체크 (포트 확인)
            echo "포트 8080 상태 확인..."
            if netstat -tlnp | grep :8080; then
              echo "포트 8080이 열려있습니다!"
              
              # 앱이 정상적으로 시작되었는지 확인
              if curl -s http://localhost:8080/actuator/health | grep -q "UP"; then
                echo "헬스체크 성공! (actuator/health)"
                exit 0
              elif curl -s http://localhost:8080/actuator | grep -q "actuator"; then
                echo "헬스체크 성공! (actuator)"
                exit 0
              elif curl -s http://localhost:8080/ | grep -q "html\|json"; then
                echo "헬스체크 성공! (root)"
                exit 0
              else
                echo "앱이 시작되었지만 응답이 없습니다. 컨테이너 상태를 확인하세요."
                docker ps -a
                exit 1
              fi
            else
              echo "포트 8080이 열려있지 않습니다!"
              exit 1
            fi
